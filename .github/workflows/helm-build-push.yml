name: Publish Danswer Helm Chart

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    # depending on default permission settings for your org (contents being read-only or read-write for workloads), you will have to add permissions
    # see: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fail on semver pre-release chart version
        run: yq .version deployment/helm/Chart.yaml | grep -v '[a-zA-Z-]'
        if: ${{ github.ref_name == 'main'}}

      - name: Fail on stable semver release chart version
        run: yq .version deployment/helm/Chart.yaml | grep '[a-zA-Z-]'
        if: ${{ github.ref_name != 'main'}}

      - name: Fail if image tags don't exist
        run: >-
         curl -H "Authorization: Bearer $(echo ${{ secrets.GITHUB_TOKEN }} | base64)"
         https://ghcr.io/v2/stackhpc/danswer/danswer-backend/tags/list
         | jq .tags
         | grep $( yq .appVersion deployment/helm/Chart.yaml )-$( yq .tagSuffix deployment/helm/values.yaml )
         &&
         curl -H "Authorization: Bearer $(echo ${{ secrets.GITHUB_TOKEN }} | base64)"
         https://ghcr.io/v2/stackhpc/danswer/danswer-web-server/tags/list
         | jq .tags
         | grep $( yq .appVersion deployment/helm/Chart.yaml )-$( yq .tagSuffix deployment/helm/values.yaml )

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Build Helm dependencies
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add vespa https://unoplat.github.io/vespa-helm-charts
          helm dependency build deployment/helm

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        with:
          charts_dir: deployment
          pages_branch: helm-publish
          # Only mark main branch releases as latest
          mark_as_latest: ${{ github.ref_name == 'main' }}
          # Allow overwriting of old versions on non-main branches
          skip_existing: ${{ github.ref_name == 'main' }}
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_RELEASE_NAME_TEMPLATE: "danswer-helm-{{ .Version }}"
